<?xml version="1.0"?>
<launch>
  <!-- Topics -->
  <arg name="crop_box_filter_measurement_range_param_path" default="$(find-pkg-share autoware_launch)/config/localization/crop_box_filter_measurement_range.param.yaml"/>
  <arg name="voxel_grid_downsample_filter_param_path" default="$(find-pkg-share autoware_launch)/config/localization/voxel_grid_filter.param.yaml"/>
  <arg name="random_downsample_filter_param_path" default="$(find-pkg-share autoware_launch)/config/localization/random_downsample_filter.param.yaml"/>
  <arg name="ndt_scan_matcher_param_path" default="$(find-pkg-share autoware_launch)/config/localization/ndt_scan_matcher.param.yaml"/>
  <arg name="localization_error_monitor_param_path" default="$(find-pkg-share autoware_launch)/config/localization/localization_error_monitor.param.yaml"/>

  <arg name="input/pointcloud" default="/sensing/lidar/outlier_filtered/pointcloud" description="input topic name"/>
  <arg name="output/pointcloud" default="downsample/pointcloud" description="final output topic name"/>

  <!-- container -->
  <arg name="use_pointcloud_container" default="true" description="launch pointcloud container"/>
  <arg name="pointcloud_container_name" default="/pointcloud_container" description="container name"/>

  <!-- option -->
  <arg name="use_intra_process" default="true" description="use ROS2 component container communication"/>

  <!-- pose_initializer -->
  <group>
    <include file="$(find-pkg-share pose_initializer)/launch/pose_initializer.launch.xml">
      <arg name="gnss_enabled" value="true"/>
      <arg name="ndt_enabled" value="true"/>
      <arg name="stop_check_enabled" value="false"/> <!-- true --> <!-- HH_230221 -->
    </include>
  </group>

  <!-- pose_initializer (Automatic call from AD API) -->
  <group>
    <include file="$(find-pkg-share automatic_pose_initializer)/launch/automatic_pose_initializer.launch.xml"/>
  </group>

  <!-- util -->
  <group>
    <include file="$(find-pkg-share tier4_localization_launch)/launch/util/util.launch.py">
      <arg name="input/pointcloud" value="$(var input/pointcloud)"/>
      <arg name="output/pointcloud" value="$(var output/pointcloud)"/>
      <arg name="use_pointcloud_container" value="$(var use_pointcloud_container)"/>
      <arg name="pointcloud_container_name" value="$(var pointcloud_container_name)"/>
      <arg name="use_intra_process" value="$(var use_intra_process)"/>
    </include>
  </group>
</launch>
